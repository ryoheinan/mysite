name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checking for .DS_Store files 👮
        uses: Maxelweb/ds-store-patrol@v1

      - name: Checkout 🛎
        uses: actions/checkout@v2

      - name: Setup node env 🏗
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Install dependencies 👨🏻‍💻
        run: yarn install

      - name: Run linter 👀
        run: yarn lint
      
      - name: Build 🏭
        run: yarn build

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: Production

      - name: Deploy to Netlify
        run: npx netlify-cli deploy --dir=./dist --message="${{ github.event.head_commit.message }}" --prod
        id: netlify-action
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment_url: https://ryohei.dev
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
